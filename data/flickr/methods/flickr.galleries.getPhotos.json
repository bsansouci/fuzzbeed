{
  "method": {
    "name": "flickr.galleries.getPhotos",
    "needslogin": 0,
    "needssigning": 0,
    "requiredperms": 0,
    "description": {
      "_content": "Return the list of photos for a gallery"
    },
    "response": {
      "_content": "<photos page=\"1\" pages=\"1\" perpage=\"500\" total=\"2\">\r\n\t<photo id=\"2822546461\" owner=\"78398753@N00\" secret=\"2dbcdb589f\" server=\"1\" farm=\"1\" title=\"FOO\" \r\n     ispublic=\"1\" isfriend=\"0\" isfamily=\"0\" is_primary=\"1\" has_comment=\"1\">\r\n\t\t<comment>best cat picture ever!</comment>\r\n\t</photo>\r\n\t<photo id=\"2822544806\" owner=\"78398753@N00\" secret=\"bd93cbe917\" server=\"1\" farm=\"1\" title=\"OOK\" \r\n     ispublic=\"1\" isfriend=\"0\" isfamily=\"0\" is_primary=\"0\" has_comment=\"0\" />\r\n</photos>"
    },
    "explanation": {
      "_content": "Returns a <a href=\"http://code.flickr.com/blog/2008/08/19/standard-photos-response-apis-for-civilized-age/\">standard photo response</a>.  Additionally if the gallery creator has included a comment with the photo this will be then the photo element will have the attribute has_comment=\"1\" and the child element \"comment\" will be present."
    }
  },
  "arguments": {
    "argument": [
      {
        "name": "api_key",
        "optional": 0,
        "_content": "Your API application key. <a href=\"/services/api/misc.api_keys.html\">See here</a> for more details."
      },
      {
        "name": "gallery_id",
        "optional": "0",
        "_content": "The ID of the gallery of photos to return"
      },
      {
        "name": "extras",
        "optional": 1,
        "_content": "A comma-delimited list of extra information to fetch for each returned record. Currently supported fields are: <code>description</code>, <code>license</code>, <code>date_upload</code>, <code>date_taken</code>, <code>owner_name</code>, <code>icon_server</code>, <code>original_format</code>, <code>last_update</code>, <code>geo</code>, <code>tags</code>, <code>machine_tags</code>, <code>o_dims</code>, <code>views</code>, <code>media</code>, <code>path_alias</code>, <code>url_sq</code>, <code>url_t</code>, <code>url_s</code>, <code>url_q</code>, <code>url_m</code>, <code>url_n</code>, <code>url_z</code>, <code>url_c</code>, <code>url_l</code>, <code>url_o</code>"
      },
      {
        "name": "per_page",
        "optional": 1,
        "_content": "Number of photos to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500."
      },
      {
        "name": "page",
        "optional": 1,
        "_content": "The page of results to return. If this argument is omitted, it defaults to 1."
      }
    ]
  },
  "errors": {
    "error": [
      {
        "code": 100,
        "message": "Invalid API Key",
        "_content": "The API key passed was not valid or has expired."
      },
      {
        "code": 105,
        "message": "Service currently unavailable",
        "_content": "The requested service is temporarily unavailable."
      },
      {
        "code": 106,
        "message": "Write operation failed",
        "_content": "The requested operation failed due to a temporary issue."
      },
      {
        "code": 111,
        "message": "Format \"xxx\" not found",
        "_content": "The requested response format was not found."
      },
      {
        "code": 112,
        "message": "Method \"xxx\" not found",
        "_content": "The requested method was not found."
      },
      {
        "code": 114,
        "message": "Invalid SOAP envelope",
        "_content": "The SOAP envelope send in the request could not be parsed."
      },
      {
        "code": 115,
        "message": "Invalid XML-RPC Method Call",
        "_content": "The XML-RPC request document could not be parsed."
      },
      {
        "code": 116,
        "message": "Bad URL found",
        "_content": "One or more arguments contained a URL that has been used for abuse on Flickr."
      }
    ]
  },
  "stat": "ok"
}