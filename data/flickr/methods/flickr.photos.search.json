{
  "method": {
    "name": "flickr.photos.search",
    "needslogin": 0,
    "needssigning": 0,
    "requiredperms": 0,
    "description": {
      "_content": "Return a list of photos matching some criteria. Only photos visible to the calling user will be returned. To return private or semi-private photos, the caller must be authenticated with 'read' permissions, and have permission to view the photos. Unauthenticated calls will only return public photos."
    },
    "explanation": {
      "_content": "Please note that Flickr will return at most the first 4,000 results for any given search query.  If this is an issue, we recommend trying a more specific query."
    }
  },
  "arguments": {
    "argument": [
      {
        "name": "api_key",
        "optional": 0,
        "_content": "Your API application key. <a href=\"/services/api/misc.api_keys.html\">See here</a> for more details."
      },
      {
        "name": "user_id",
        "optional": "1",
        "_content": "The NSID of the user who's photo to search. If this parameter isn't passed then everybody's public photos will be searched. A value of \"me\" will search against the calling user's photos for authenticated calls."
      },
      {
        "name": "tags",
        "optional": "1",
        "_content": "A comma-delimited list of tags. Photos with one or more of the tags listed will be returned. You can exclude results that match a term by prepending it with a - character."
      },
      {
        "name": "tag_mode",
        "optional": "1",
        "_content": "Either 'any' for an OR combination of tags, or 'all' for an AND combination. Defaults to 'any' if not specified."
      },
      {
        "name": "text",
        "optional": "1",
        "_content": "A free text search. Photos who's title, description or tags contain the text will be returned. You can exclude results that match a term by prepending it with a - character."
      },
      {
        "name": "min_upload_date",
        "optional": "1",
        "_content": "Minimum upload date. Photos with an upload date greater than or equal to this value will be returned. The date can be in the form of a unix timestamp or mysql datetime."
      },
      {
        "name": "max_upload_date",
        "optional": "1",
        "_content": "Maximum upload date. Photos with an upload date less than or equal to this value will be returned. The date can be in the form of a unix timestamp or mysql datetime."
      },
      {
        "name": "min_taken_date",
        "optional": "1",
        "_content": "Minimum taken date. Photos with an taken date greater than or equal to this value will be returned. The date can be in the form of a mysql datetime or unix timestamp."
      },
      {
        "name": "max_taken_date",
        "optional": "1",
        "_content": "Maximum taken date. Photos with an taken date less than or equal to this value will be returned. The date can be in the form of a mysql datetime or unix timestamp."
      },
      {
        "name": "license",
        "optional": "1",
        "_content": "The license id for photos (for possible values see the flickr.photos.licenses.getInfo method). Multiple licenses may be comma-separated."
      },
      {
        "name": "sort",
        "optional": "1",
        "_content": "The order in which to sort returned photos. Deafults to date-posted-desc (unless you are doing a radial geo query, in which case the default sorting is by ascending distance from the point specified). The possible values are: date-posted-asc, date-posted-desc, date-taken-asc, date-taken-desc, interestingness-desc, interestingness-asc, and relevance."
      },
      {
        "name": "privacy_filter",
        "optional": "1",
        "_content": "Return photos only matching a certain privacy level. This only applies when making an authenticated call to view photos you own. Valid values are:\r\n<ul>\r\n<li>1 public photos</li>\r\n<li>2 private photos visible to friends</li>\r\n<li>3 private photos visible to family</li>\r\n<li>4 private photos visible to friends & family</li>\r\n<li>5 completely private photos</li>\r\n</ul>\r\n"
      },
      {
        "name": "bbox",
        "optional": "1",
        "_content": "A comma-delimited list of 4 values defining the Bounding Box of the area that will be searched.\r\n<br /><br />\r\nThe 4 values represent the bottom-left corner of the box and the top-right corner, minimum_longitude, minimum_latitude, maximum_longitude, maximum_latitude.\r\n<br /><br />\r\nLongitude has a range of -180 to 180 , latitude of -90 to 90. Defaults to -180, -90, 180, 90 if not specified.\r\n<br /><br />\r\nUnlike standard photo queries, geo (or bounding box) queries will only return 250 results per page.\r\n<br /><br />\r\nGeo queries require some sort of limiting agent in order to prevent the database from crying. This is basically like the check against \"parameterless searches\" for queries without a geo component.\r\n<br /><br />\r\nA tag, for instance, is considered a limiting agent as are user defined min_date_taken and min_date_upload parameters &#8212; If no limiting factor is passed we return only photos added in the last 12 hours (though we may extend the limit in the future)."
      },
      {
        "name": "accuracy",
        "optional": "1",
        "_content": "Recorded accuracy level of the location information.  Current range is 1-16 : \r\n\r\n<ul>\r\n<li>World level is 1</li>\r\n<li>Country is ~3</li>\r\n<li>Region is ~6</li>\r\n<li>City is ~11</li>\r\n<li>Street is ~16</li>\r\n</ul>\r\n\r\nDefaults to maximum value if not specified."
      },
      {
        "name": "safe_search",
        "optional": "1",
        "_content": "Safe search setting:\r\n\r\n<ul>\r\n<li>1 for safe.</li>\r\n<li>2 for moderate.</li>\r\n<li>3 for restricted.</li>\r\n</ul>\r\n\r\n(Please note: Un-authed calls can only see Safe content.)"
      },
      {
        "name": "content_type",
        "optional": "1",
        "_content": "Content Type setting:\r\n<ul>\r\n<li>1 for photos only.</li>\r\n<li>2 for screenshots only.</li>\r\n<li>3 for 'other' only.</li>\r\n<li>4 for photos and screenshots.</li>\r\n<li>5 for screenshots and 'other'.</li>\r\n<li>6 for photos and 'other'.</li>\r\n<li>7 for photos, screenshots, and 'other' (all).</li>\r\n</ul>"
      },
      {
        "name": "machine_tags",
        "optional": "1",
        "_content": "Aside from passing in a fully formed machine tag, there is a special syntax for searching on specific properties :\r\n\r\n<ul>\r\n  <li>Find photos using the 'dc' namespace :    <code>\"machine_tags\" => \"dc:\"</code></li>\r\n\r\n  <li> Find photos with a title in the 'dc' namespace : <code>\"machine_tags\" => \"dc:title=\"</code></li>\r\n\r\n  <li>Find photos titled \"mr. camera\" in the 'dc' namespace : <code>\"machine_tags\" => \"dc:title=\\\"mr. camera\\\"</code></li>\r\n\r\n  <li>Find photos whose value is \"mr. camera\" : <code>\"machine_tags\" => \"*:*=\\\"mr. camera\\\"\"</code></li>\r\n\r\n  <li>Find photos that have a title, in any namespace : <code>\"machine_tags\" => \"*:title=\"</code></li>\r\n\r\n  <li>Find photos that have a title, in any namespace, whose value is \"mr. camera\" : <code>\"machine_tags\" => \"*:title=\\\"mr. camera\\\"\"</code></li>\r\n\r\n  <li>Find photos, in the 'dc' namespace whose value is \"mr. camera\" : <code>\"machine_tags\" => \"dc:*=\\\"mr. camera\\\"\"</code></li>\r\n\r\n </ul>\r\n\r\nMultiple machine tags may be queried by passing a comma-separated list. The number of machine tags you can pass in a single query depends on the tag mode (AND or OR) that you are querying with. \"AND\" queries are limited to (16) machine tags. \"OR\" queries are limited\r\nto (8)."
      },
      {
        "name": "machine_tag_mode",
        "optional": "1",
        "_content": "Either 'any' for an OR combination of tags, or 'all' for an AND combination. Defaults to 'any' if not specified."
      },
      {
        "name": "group_id",
        "optional": "1",
        "_content": "The id of a group who's pool to search.  If specified, only matching photos posted to the group's pool will be returned."
      },
      {
        "name": "contacts",
        "optional": "1",
        "_content": "Search your contacts. Either 'all' or 'ff' for just friends and family. (Experimental)"
      },
      {
        "name": "woe_id",
        "optional": "1",
        "_content": "A 32-bit identifier that uniquely represents spatial entities. (not used if bbox argument is present). \r\n<br /><br />\r\nGeo queries require some sort of limiting agent in order to prevent the database from crying. This is basically like the check against \"parameterless searches\" for queries without a geo component.\r\n<br /><br />\r\nA tag, for instance, is considered a limiting agent as are user defined min_date_taken and min_date_upload parameters &mdash; If no limiting factor is passed we return only photos added in the last 12 hours (though we may extend the limit in the future)."
      },
      {
        "name": "place_id",
        "optional": "1",
        "_content": "A Flickr place id.  (not used if bbox argument is present).\r\n<br /><br />\r\nGeo queries require some sort of limiting agent in order to prevent the database from crying. This is basically like the check against \"parameterless searches\" for queries without a geo component.\r\n<br /><br />\r\nA tag, for instance, is considered a limiting agent as are user defined min_date_taken and min_date_upload parameters &mdash; If no limiting factor is passed we return only photos added in the last 12 hours (though we may extend the limit in the future)."
      },
      {
        "name": "media",
        "optional": "1",
        "_content": "Filter results by media type. Possible values are <code>all</code> (default), <code>photos</code> or <code>videos</code>"
      },
      {
        "name": "has_geo",
        "optional": "1",
        "_content": "Any photo that has been geotagged, or if the value is \"0\" any photo that has <i>not</i> been geotagged.\r\n<br /><br />\r\nGeo queries require some sort of limiting agent in order to prevent the database from crying. This is basically like the check against \"parameterless searches\" for queries without a geo component.\r\n<br /><br />\r\nA tag, for instance, is considered a limiting agent as are user defined min_date_taken and min_date_upload parameters &mdash; If no limiting factor is passed we return only photos added in the last 12 hours (though we may extend the limit in the future)."
      },
      {
        "name": "geo_context",
        "optional": "1",
        "_content": "Geo context is a numeric value representing the photo's geotagginess beyond latitude and longitude. For example, you may wish to search for photos that were taken \"indoors\" or \"outdoors\". <br /><br />\r\nThe current list of context IDs is :<br /><br/>\r\n<ul>\r\n<li><strong>0</strong>, not defined.</li>\r\n<li><strong>1</strong>, indoors.</li>\r\n<li><strong>2</strong>, outdoors.</li>\r\n</ul>\r\n<br /><br />\r\nGeo queries require some sort of limiting agent in order to prevent the database from crying. This is basically like the check against \"parameterless searches\" for queries without a geo component.\r\n<br /><br />\r\nA tag, for instance, is considered a limiting agent as are user defined min_date_taken and min_date_upload parameters &mdash; If no limiting factor is passed we return only photos added in the last 12 hours (though we may extend the limit in the future)."
      },
      {
        "name": "lat",
        "optional": "1",
        "_content": "A valid latitude, in decimal format, for doing radial geo queries.\r\n<br /><br />\r\nGeo queries require some sort of limiting agent in order to prevent the database from crying. This is basically like the check against \"parameterless searches\" for queries without a geo component.\r\n<br /><br />\r\nA tag, for instance, is considered a limiting agent as are user defined min_date_taken and min_date_upload parameters &mdash; If no limiting factor is passed we return only photos added in the last 12 hours (though we may extend the limit in the future)."
      },
      {
        "name": "lon",
        "optional": "1",
        "_content": "A valid longitude, in decimal format, for doing radial geo queries.\r\n<br /><br />\r\nGeo queries require some sort of limiting agent in order to prevent the database from crying. This is basically like the check against \"parameterless searches\" for queries without a geo component.\r\n<br /><br />\r\nA tag, for instance, is considered a limiting agent as are user defined min_date_taken and min_date_upload parameters &mdash; If no limiting factor is passed we return only photos added in the last 12 hours (though we may extend the limit in the future)."
      },
      {
        "name": "radius",
        "optional": "1",
        "_content": "A valid radius used for geo queries, greater than zero and less than 20 miles (or 32 kilometers), for use with point-based geo queries. The default value is 5 (km)."
      },
      {
        "name": "radius_units",
        "optional": "1",
        "_content": "The unit of measure when doing radial geo queries. Valid options are \"mi\" (miles) and \"km\" (kilometers). The default is \"km\"."
      },
      {
        "name": "is_commons",
        "optional": "1",
        "_content": "Limit the scope of the search to only photos that are part of the <a href=\"http://flickr.com/commons\">Flickr Commons project</a>. Default is false."
      },
      {
        "name": "in_gallery",
        "optional": "1",
        "_content": "Limit the scope of the search to only photos that are in a <a href=\"http://www.flickr.com/help/galleries/\">gallery</a>?  Default is false, search all photos."
      },
      {
        "name": "is_getty",
        "optional": "1",
        "_content": "Limit the scope of the search to only photos that are for sale on Getty. Default is false."
      },
      {
        "name": "extras",
        "optional": 1,
        "_content": "A comma-delimited list of extra information to fetch for each returned record. Currently supported fields are: <code>description</code>, <code>license</code>, <code>date_upload</code>, <code>date_taken</code>, <code>owner_name</code>, <code>icon_server</code>, <code>original_format</code>, <code>last_update</code>, <code>geo</code>, <code>tags</code>, <code>machine_tags</code>, <code>o_dims</code>, <code>views</code>, <code>media</code>, <code>path_alias</code>, <code>url_sq</code>, <code>url_t</code>, <code>url_s</code>, <code>url_q</code>, <code>url_m</code>, <code>url_n</code>, <code>url_z</code>, <code>url_c</code>, <code>url_l</code>, <code>url_o</code>"
      },
      {
        "name": "per_page",
        "optional": 1,
        "_content": "Number of photos to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500."
      },
      {
        "name": "page",
        "optional": 1,
        "_content": "The page of results to return. If this argument is omitted, it defaults to 1."
      }
    ]
  },
  "errors": {
    "error": [
      {
        "code": "1",
        "message": "Too many tags in ALL query",
        "_content": "When performing an 'all tags' search, you may not specify more than 20 tags to join together."
      },
      {
        "code": "2",
        "message": "Unknown user",
        "_content": "A user_id was passed which did not match a valid flickr user."
      },
      {
        "code": "3",
        "message": "Parameterless searches have been disabled",
        "_content": "To perform a search with no parameters (to get the latest public photos, please use flickr.photos.getRecent instead)."
      },
      {
        "code": "4",
        "message": "You don't have permission to view this pool",
        "_content": "The logged in user (if any) does not have permission to view the pool for this group."
      },
      {
        "code": "10",
        "message": "Sorry, the Flickr search API is not currently available.",
        "_content": "The Flickr API search databases are temporarily unavailable."
      },
      {
        "code": "11",
        "message": "No valid machine tags",
        "_content": "The query styntax for the machine_tags argument did not validate."
      },
      {
        "code": "12",
        "message": "Exceeded maximum allowable machine tags",
        "_content": "The maximum number of machine tags in a single query was exceeded."
      },
      {
        "code": "13",
        "message": "jump_to not avaiable for this query",
        "_content": "jump_to only supported for some query types."
      },
      {
        "code": "14",
        "message": "Bad value for jump_to",
        "_content": "jump_to must be valid photo ID."
      },
      {
        "code": "15",
        "message": "Photo not found",
        "_content": ""
      },
      {
        "code": "16",
        "message": "You can only search within your own favorites",
        "_content": ""
      },
      {
        "code": "17",
        "message": "You can only search within your own contacts",
        "_content": "The call tried to use the contacts parameter with no user ID or a user ID other than that of the authenticated user."
      },
      {
        "code": "18",
        "message": "Illogical arguments",
        "_content": "The request contained contradictory arguments."
      },
      {
        "code": "20",
        "message": "Excessive photo offset in search",
        "_content": "The search requested photos beyond an allowable offset. Reduce the page number or number of results per page for this search."
      },
      {
        "code": 100,
        "message": "Invalid API Key",
        "_content": "The API key passed was not valid or has expired."
      },
      {
        "code": 105,
        "message": "Service currently unavailable",
        "_content": "The requested service is temporarily unavailable."
      },
      {
        "code": 106,
        "message": "Write operation failed",
        "_content": "The requested operation failed due to a temporary issue."
      },
      {
        "code": 111,
        "message": "Format \"xxx\" not found",
        "_content": "The requested response format was not found."
      },
      {
        "code": 112,
        "message": "Method \"xxx\" not found",
        "_content": "The requested method was not found."
      },
      {
        "code": 114,
        "message": "Invalid SOAP envelope",
        "_content": "The SOAP envelope send in the request could not be parsed."
      },
      {
        "code": 115,
        "message": "Invalid XML-RPC Method Call",
        "_content": "The XML-RPC request document could not be parsed."
      },
      {
        "code": 116,
        "message": "Bad URL found",
        "_content": "One or more arguments contained a URL that has been used for abuse on Flickr."
      }
    ]
  },
  "stat": "ok"
}