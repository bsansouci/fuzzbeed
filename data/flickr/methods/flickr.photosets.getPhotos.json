{
  "method": {
    "name": "flickr.photosets.getPhotos",
    "needslogin": 0,
    "needssigning": 0,
    "requiredperms": 0,
    "description": {
      "_content": "Get the list of photos in a set."
    },
    "response": {
      "_content": "<photoset id=\"4\" primary=\"2483\" page=\"1\" perpage=\"500\" pages=\"1\" total=\"2\">\r\n\t<photo id=\"2484\" secret=\"123456\" server=\"1\"\r\n\t\ttitle=\"my photo\" isprimary=\"0\" /> \r\n\t<photo id=\"2483\" secret=\"123456\" server=\"1\"\r\n\t\ttitle=\"flickr rocks\" isprimary=\"1\" /> \r\n</photoset>"
    }
  },
  "arguments": {
    "argument": [
      {
        "name": "api_key",
        "optional": 0,
        "_content": "Your API application key. <a href=\"/services/api/misc.api_keys.html\">See here</a> for more details."
      },
      {
        "name": "photoset_id",
        "optional": "0",
        "_content": "The id of the photoset to return the photos for."
      },
      {
        "name": "extras",
        "optional": "1",
        "_content": "A comma-delimited list of extra information to fetch for each returned record. Currently supported fields are: license, date_upload, date_taken, owner_name, icon_server, original_format, last_update, geo, tags, machine_tags, o_dims, views, media, path_alias, url_sq, url_t, url_s, url_m, url_o"
      },
      {
        "name": "privacy_filter",
        "optional": "1",
        "_content": "Return photos only matching a certain privacy level. This only applies when making an authenticated call to view a photoset you own. Valid values are:\r\n<ul>\r\n<li>1 public photos</li>\r\n<li>2 private photos visible to friends</li>\r\n<li>3 private photos visible to family</li>\r\n<li>4 private photos visible to friends &amp; family</li>\r\n<li>5 completely private photos</li>\r\n</ul>\r\n"
      },
      {
        "name": "per_page",
        "optional": "1",
        "_content": "Number of photos to return per page. If this argument is omitted, it defaults to 500. The maximum allowed value is 500."
      },
      {
        "name": "page",
        "optional": "1",
        "_content": "The page of results to return. If this argument is omitted, it defaults to 1."
      },
      {
        "name": "media",
        "optional": "1",
        "_content": "Filter results by media type. Possible values are <code>all</code> (default), <code>photos</code> or <code>videos</code>"
      }
    ]
  },
  "errors": {
    "error": [
      {
        "code": "1",
        "message": "Photoset not found",
        "_content": "The photoset id passed was not a valid photoset id."
      },
      {
        "code": 100,
        "message": "Invalid API Key",
        "_content": "The API key passed was not valid or has expired."
      },
      {
        "code": 105,
        "message": "Service currently unavailable",
        "_content": "The requested service is temporarily unavailable."
      },
      {
        "code": 106,
        "message": "Write operation failed",
        "_content": "The requested operation failed due to a temporary issue."
      },
      {
        "code": 111,
        "message": "Format \"xxx\" not found",
        "_content": "The requested response format was not found."
      },
      {
        "code": 112,
        "message": "Method \"xxx\" not found",
        "_content": "The requested method was not found."
      },
      {
        "code": 114,
        "message": "Invalid SOAP envelope",
        "_content": "The SOAP envelope send in the request could not be parsed."
      },
      {
        "code": 115,
        "message": "Invalid XML-RPC Method Call",
        "_content": "The XML-RPC request document could not be parsed."
      },
      {
        "code": 116,
        "message": "Bad URL found",
        "_content": "One or more arguments contained a URL that has been used for abuse on Flickr."
      }
    ]
  },
  "stat": "ok"
}